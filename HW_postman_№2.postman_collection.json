{
	"info": {
		"_postman_id": "9a72c1f3-b52e-43aa-a6e2-a362bc20fb84",
		"name": "HW_postman_â„–2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "get_method",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Body is correct\", function () {\r",
							"    pm.response.to.have.body(\"This is the first responce from server!\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/first",
					"host": [
						"{{url}}"
					],
					"path": [
						"first"
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"var resp = pm.response.json();\r",
							"\r",
							"pm.test(\"Name\", function () {\r",
							"    pm.expect(resp.name).to.eql(\"Kate\");\r",
							"});\r",
							"pm.test(\"Age\", function () {\r",
							"    pm.expect(resp.age).to.eql(\"25\");\r",
							"});\r",
							"pm.test(\"Salary\", function () {\r",
							"    pm.expect(resp.salary).to.eql(1000);\r",
							"});\r",
							"var req = request.data\r",
							"\r",
							"pm.test(\"Checking name\", function () {\r",
							"    pm.expect(req.name).to.eql(resp.name);\r",
							"});\r",
							"\r",
							"pm.test(\"Checking age\", function () {\r",
							"    pm.expect(req.age).to.eql(resp.age);\r",
							"});\r",
							"\r",
							"pm.test(\"Checking salary\", function () {\r",
							"    pm.expect(Number (req.salary)).to.eql(resp.salary);\r",
							"});\r",
							"\r",
							"console.log (resp.family)\r",
							"\r",
							"pm.test(\"U_salary_1_5 year in the response is equal salary *4 from the request\", function () {\r",
							"    pm.expect(resp.family. u_salary_1_5_year).to.eql(req.salary * 4);\r",
							"    });\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Kate",
							"type": "text"
						},
						{
							"key": "age",
							"value": "25",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "1000",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/user_info_3",
					"host": [
						"{{url}}"
					],
					"path": [
						"user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var responseJSON = pm.response.json();\r",
							"var requestJSON = pm.request.url.query.toObject()\r",
							"\r",
							"pm.test(\"name_response= name_request\", function () {\r",
							"    pm.expect(responseJSON.name).to.eql(requestJSON.name);\r",
							"});\r",
							"\r",
							"pm.test(\"age_response= age_request\", function () {\r",
							"    pm.expect(responseJSON.age).to.eql(requestJSON.age);\r",
							"});\r",
							"\r",
							"pm.test(\"salary_response= salary_request\", function () {\r",
							"    pm.expect(responseJSON.salary).to.eql(+requestJSON.salary);\r",
							"});\r",
							"\r",
							"console.log(responseJSON.family)\r",
							"\r",
							"pm.test(\"dog has name\", function () {\r",
							"    pm.expect(responseJSON.family.pets.dog).to.have.any.keys (\"name\");\r",
							"});\r",
							"\r",
							"pm.test(\"dog has age\", function () {\r",
							"    pm.expect(responseJSON.family.pets.dog).to.have.any.keys (\"age\");\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"the name parameter is Luky\", function () {\r",
							"    pm.expect(responseJSON.family.pets.dog.name).to.eql(\"Luky\");\r",
							"});\r",
							"\r",
							"pm.test(\"the name parameter is 4\", function () {\r",
							"    pm.expect(responseJSON.family.pets.dog.age).to.eql(4);\r",
							"});\r",
							"\r",
							"console.log(requestJSON)\r",
							"\r",
							"console.log(responseJSON)\r",
							"\r",
							"pm.environment.set(\"Age\", \"25\");\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_3?name=Dima&age=35&salary=2000",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Dima"
						},
						{
							"key": "age",
							"value": "35"
						},
						{
							"key": "salary",
							"value": "2000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"var responseJSON = pm.response.json();\r",
							"var requestJSON = pm.request.url.query.toObject()\r",
							"\r",
							"\r",
							"pm.test(\"name_response= name_request\", function () {\r",
							"    pm.expect(responseJSON.name).to.eql(requestJSON.name);\r",
							"});\r",
							"\r",
							"\r",
							"console.log(requestJSON)\r",
							"\r",
							"\r",
							"pm.test(\"age_response= age_request\", function () {\r",
							"    pm.expect(responseJSON.age).to.eql(18);\r",
							"});\r",
							"\r",
							"console.log(requestJSON)\r",
							"\r",
							"console.log (requestJSON.salary)\r",
							"\r",
							"console.log (responseJSON.salary)\r",
							"\r",
							"console.log (responseJSON.salary[0])\r",
							"\r",
							"console.log (responseJSON.salary[1])\r",
							"\r",
							"console.log (responseJSON.salary[2])\r",
							"\r",
							"pm.test(\"the salary[0] parameter is equal the salary from the request\", function () {\r",
							"    pm.expect(responseJSON.salary[0]).to.eql(Number(requestJSON.salary));\r",
							"});\r",
							"\r",
							"pm.test(\"the salary[1] = the salary from the request *2 \", function () {\r",
							"    pm.expect(Number(responseJSON.salary[1])).to.eql(requestJSON.salary * 2);\r",
							"});\r",
							"\r",
							"pm.test(\"the salary[1] = the salary from the request *2 \", function () {\r",
							"    pm.expect(Number(responseJSON.salary[1])).to.eql(requestJSON.salary * 2);\r",
							"});\r",
							"\r",
							"pm.test(\"the salary[2] = the salary from the request *3 \", function () {\r",
							"    pm.expect(Number(responseJSON.salary[2])).to.eql(requestJSON.salary * 3);\r",
							"});\r",
							"\r",
							"pm.environment.set(\"Age\", \"25\");\r",
							"\r",
							"pm.environment.set(\"Name\", \"Kate\");\r",
							"\r",
							"pm.environment.set(\"Salary\", \"600\");\r",
							"\r",
							"\r",
							"\r",
							"  "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_4?name=Alex&age=18&salary=500",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Alex"
						},
						{
							"key": "age",
							"value": "18"
						},
						{
							"key": "salary",
							"value": "500"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var responseJSON = pm.response.json();\r",
							"var req = request.date\r",
							"\r",
							"pm.test(\"response have param = start_qa_salary\", function () {\r",
							"    pm.expect(responseJSON).to.have.property (\"start_qa_salary\");\r",
							"});\r",
							"\r",
							"pm.test(\"response have param = qa_salary_after_6_months\", function () {\r",
							"    pm.expect(responseJSON).to.have.property (\"qa_salary_after_6_months\");\r",
							"});\r",
							"\r",
							"pm.test(\"response have param = qa_salary_after_12_months\", function () {\r",
							"    pm.expect(responseJSON).to.have.property (\"qa_salary_after_12_months\");\r",
							"});\r",
							"\r",
							"pm.test(\"response have param = qa_salary_after_1.5_year\", function () {\r",
							"    pm.expect(responseJSON).to.have.property (\"qa_salary_after_1.5_year\");\r",
							"});\r",
							"\r",
							"pm.test(\"response have param = qa_salary_after_3.5_years\", function () {\r",
							"    pm.expect(responseJSON).to.have.property (\"qa_salary_after_3.5_years\");\r",
							"});\r",
							"\r",
							"pm.test(\"response have param = person\", function () {\r",
							"    pm.expect(responseJSON).to.have.property (\"person\");\r",
							"\r",
							"});\r",
							"\r",
							"pm.test(\"start_qa_salary = salary_request\", function () {\r",
							"    pm.expect(String(responseJSON.start_qa_salary)).to.eql(request.data.salary);\r",
							"});\r",
							"\r",
							"pm.test(\"qa_salary_after_6_months = salary*2\", function () {\r",
							"    pm.expect(responseJSON.qa_salary_after_6_months).to.eql(request.data.salary*2);\r",
							"});\r",
							"\r",
							"pm.test(\"qa_salary_after_12_months = salary*2.7\", function () {\r",
							"    pm.expect(responseJSON.qa_salary_after_12_months).to.eql(request.data.salary*2.7);\r",
							"});\r",
							"\r",
							"pm.test(\"qa_salary_after_1.5_year = salary*3.3\", function () {\r",
							"    pm.expect(responseJSON[\"qa_salary_after_1.5_year\"]).to.eql(request.data.salary*3.3);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"qa_salary_after_3.5_years = salary*3.8\", function () {\r",
							"    pm.expect(responseJSON[\"qa_salary_after_3.5_years\"]).to.eql(request.data.salary*3.8);\r",
							"});\r",
							"\r",
							"pm.test(\"correct param u_name\", function () {\r",
							"    pm.expect(responseJSON.person.u_name[1]).to.eql(+request.data.salary);\r",
							"});\r",
							"\r",
							"pm.test(\"correct param u_age\", function () {\r",
							"    pm.expect(responseJSON.person.u_age).to.eql(+request.data.age);\r",
							"});\r",
							"\r",
							"pm.test(\"u_salary_5_years = salary*4.2\", function () {\r",
							"    pm.expect(responseJSON.person.u_salary_5_years).to.eql(request.data.salary*4.2);\r",
							"});\r",
							"\r",
							"for (var prop in responseJSON.person )\r",
							"{\r",
							"    console.log (\"person \" + prop + \"- \" + responseJSON.person [prop]);\r",
							"}\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "salary",
							"value": "{{Salary}}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{Age}}",
							"type": "text"
						},
						{
							"key": "name",
							"value": "{{Name}}",
							"type": "text"
						},
						{
							"key": "",
							"value": "",
							"type": "text",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_2",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_2"
					]
				}
			},
			"response": []
		}
	]
}