http://162.55.220.72:5005/user_info_2
1. Вставить параметр salary из окружения в request

2. Вставить параметр age из окружения в age

3. Вставить параметр name из окружения в name

4. Отправить запрос.
post http://162.55.220.72:5005/user_info_2

5. Статус код 200

6. Спарсить response body в json.

var responseJSON = pm.response.json();

7. Спарсить request.

var req = request.date

8. Проверить, что json response имеет параметр start_qa_salary

pm.test("response have param = start_qa_salary", function () {
    pm.expect(responseJSON).to.have.property ("start_qa_salary");
});

9. Проверить, что json response имеет параметр qa_salary_after_6_months

pm.test("response have param = qa_salary_after_6_months", function () {
    pm.expect(responseJSON).to.have.property ("qa_salary_after_6_months");
});

10. Проверить, что json response имеет параметр qa_salary_after_12_months

pm.test("response have param = qa_salary_after_12_months", function () {
    pm.expect(responseJSON).to.have.property ("qa_salary_after_12_months");
});

11. Проверить, что json response имеет параметр qa_salary_after_1.5_year

pm.test("response have param = qa_salary_after_1.5_year", function () {
    pm.expect(response).to.have.property ("qa_salary_after_1.5_year");
});

12. Проверить, что json response имеет параметр qa_salary_after_3.5_years

pm.test("response have param = qa_salary_after_3.5_years", function () {
    pm.expect(responseJSON).to.have.property ("qa_salary_after_3.5_years");
});

13. Проверить, что json response имеет параметр person

pm.test("response have param = person", function () {
    pm.expect(responseJSON).to.have.property ("person");

});

14. Проверить, что параметр start_qa_salary равен salary из request (salary забрать из request.)

pm.test("start_qa_salary = salary_request", function () {
    pm.expect(String(responseJSON.start_qa_salary)).to.eql(request.data.salary);
});

15. Проверить, что параметр qa_salary_after_6_months равен salary*2 из request (salary забрать из request.)

pm.test("qa_salary_after_6_months = salary*2", function () {
    pm.expect(responseJSON.qa_salary_after_6_months).to.eql(request.data.salary*2);
});

16. Проверить, что параметр qa_salary_after_12_months равен salary*2.7 из request (salary забрать из request.)

pm.test("qa_salary_after_12_months = salary*2.7", function () {
    pm.expect(responseJSON.qa_salary_after_12_months).to.eql(request.data.salary*2.7);
});


17. Проверить, что параметр qa_salary_after_1.5_year равен salary*3.3 из request (salary забрать из request.)


pm.test("qa_salary_after_1.5_year = salary*3.3", function () {
    pm.expect(responseJSON["qa_salary_after_1.5_year"]).to.eql(request.data.salary*3.3);
});

18. Проверить, что параметр qa_salary_after_3.5_years равен salary*3.8 из request (salary забрать из request.)

pm.test("qa_salary_after_3.5_years = salary*3.8", function () {
    pm.expect(responseJSON["qa_salary_after_3.5_years"]).to.eql(request.data.salary*3.8);
});


19. Проверить, что в параметре person, 1-й элемент из u_name равен salary из request (salary забрать из request.)

pm.test("correct param u_name", function () {
    pm.expect(responseJSON.person.u_name[1]).to.eql(+request.data.salary);
});


20. Проверить, что что параметр u_age равен age из request (age забрать из request.)

pm.test("correct param u_age", function () {
    pm.expect(responseJSON.person.u_age).to.eql(+request.data.age);
});

21. Проверить, что параметр u_salary_5_years равен salary*4.2 из request (salary забрать из request.)

pm.test("u_salary_5_years = salary*4.2", function () {
    pm.expect(responseJSON.person.u_salary_5_years).to.eql(request.data.salary*4.2);
});

22. ***Написать цикл который выведет в консоль по порядку элементы списка из параметра person.

for (var prop in responseJSON.person )
{
    console.log ("person " + prop + "- " + responseJSON.person [prop]);
}
